// Generated by DDC, the Dart Development Compiler (to JavaScript).
// Version: 2.19.2 (stable) (Tue Feb 7 18:37:17 2023 +0000) on "linux_x64"
// Module: zapp_user_main
// Flags: soundNullSafety(true), enableAsserts(true)
define('zapp_user_main', ['dart_sdk', 'flutter_sdk'], (function load__zapp_user_main(dart_sdk, flutter_sdk) {
  'use strict';
  const core = dart_sdk.core;
  const async = dart_sdk.async;
  const _interceptors = dart_sdk._interceptors;
  const js = dart_sdk.js;
  const ui = dart_sdk.ui;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const app = flutter_sdk.src__material__app;
  const framework = flutter_sdk.src__widgets__framework;
  const editable_text = flutter_sdk.src__widgets__editable_text;
  const colors = flutter_sdk.src__material__colors;
  const scaffold = flutter_sdk.src__material__scaffold;
  const app_bar = flutter_sdk.src__material__app_bar;
  const text = flutter_sdk.src__widgets__text;
  const basic = flutter_sdk.src__widgets__basic;
  const alignment = flutter_sdk.src__painting__alignment;
  const scroll_view = flutter_sdk.src__widgets__scroll_view;
  const edge_insets = flutter_sdk.src__painting__edge_insets;
  const image = flutter_sdk.src__widgets__image;
  const text_field = flutter_sdk.src__material__text_field;
  const text_input = flutter_sdk.src__services__text_input;
  const input_decorator = flutter_sdk.src__material__input_decorator;
  const icon = flutter_sdk.src__widgets__icon;
  const icon_data = flutter_sdk.src__widgets__icon_data;
  const flex = flutter_sdk.src__rendering__flex;
  const elevated_button = flutter_sdk.src__material__elevated_button;
  const navigator = flutter_sdk.src__widgets__navigator;
  const page = flutter_sdk.src__material__page;
  const text_style = flutter_sdk.src__painting__text_style;
  const container = flutter_sdk.src__widgets__container;
  const box_decoration = flutter_sdk.src__painting__box_decoration;
  const box_border = flutter_sdk.src__painting__box_border;
  const list_tile = flutter_sdk.src__material__list_tile;
  const divider = flutter_sdk.src__material__divider;
  const input_border = flutter_sdk.src__material__input_border;
  const borders = flutter_sdk.src__painting__borders;
  const border_radius = flutter_sdk.src__painting__border_radius;
  const theme = flutter_sdk.src__material__theme;
  const binding = flutter_sdk.src__widgets__binding;
  const theme_data = flutter_sdk.src__material__theme_data;
  const app_bar_theme = flutter_sdk.src__material__app_bar_theme;
  const elevated_button_theme = flutter_sdk.src__material__elevated_button_theme;
  var $46zapp_entry = Object.create(dart.library);
  var main = Object.create(dart.library);
  var web_plugin_registrant = Object.create(dart.library);
  var theme$ = Object.create(dart.library);
  var products = Object.create(dart.library);
  var $toString = dartx.toString;
  var $isNotEmpty = dartx.isNotEmpty;
  var $length = dartx.length;
  var $_get = dartx._get;
  dart._checkModuleNullSafetyMode(true);
  dart._checkModuleRuntimeTypes(false);
  var T = {
    VoidTovoid: () => (T.VoidTovoid = dart.constFn(dart.fnType(dart.void, [])))(),
    ListOfString: () => (T.ListOfString = dart.constFn(core.List$(core.String)))(),
    ListOfStringTodynamic: () => (T.ListOfStringTodynamic = dart.constFn(dart.fnType(dart.dynamic, [T.ListOfString()])))(),
    JSArrayOfString: () => (T.JSArrayOfString = dart.constFn(_interceptors.JSArray$(core.String)))(),
    dynamicToNull: () => (T.dynamicToNull = dart.constFn(dart.fnType(core.Null, [dart.dynamic])))(),
    VoidToNull: () => (T.VoidToNull = dart.constFn(dart.fnType(core.Null, [])))(),
    ObjectAndStackTraceTovoid: () => (T.ObjectAndStackTraceTovoid = dart.constFn(dart.fnType(dart.void, [core.Object, core.StackTrace])))(),
    ZoneAndZoneDelegateAndZone__Tovoid: () => (T.ZoneAndZoneDelegateAndZone__Tovoid = dart.constFn(dart.fnType(dart.void, [async.Zone, async.ZoneDelegate, async.Zone, core.String])))(),
    StringTovoid: () => (T.StringTovoid = dart.constFn(dart.fnType(dart.void, [core.String])))(),
    BuildContextToSecondPage: () => (T.BuildContextToSecondPage = dart.constFn(dart.fnType(main.SecondPage, [framework.BuildContext])))(),
    JSArrayOfWidget: () => (T.JSArrayOfWidget = dart.constFn(_interceptors.JSArray$(framework.Widget)))(),
    ListOfItem: () => (T.ListOfItem = dart.constFn(core.List$(products.Item)))(),
    ColorTovoid: () => (T.ColorTovoid = dart.constFn(dart.fnType(dart.void, [ui.Color])))(),
    boolTovoid: () => (T.boolTovoid = dart.constFn(dart.fnType(dart.void, [core.bool])))(),
    BuildContextToConfirmPage: () => (T.BuildContextToConfirmPage = dart.constFn(dart.fnType(main.ConfirmPage, [framework.BuildContext])))(),
    BuildContextAndintToListTile: () => (T.BuildContextAndintToListTile = dart.constFn(dart.fnType(list_tile.ListTile, [framework.BuildContext, core.int])))(),
    BuildContextToFinalPage: () => (T.BuildContextToFinalPage = dart.constFn(dart.fnType(main.FinalPage, [framework.BuildContext])))(),
    JSArrayOfItem: () => (T.JSArrayOfItem = dart.constFn(_interceptors.JSArray$(products.Item)))()
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C0() {
      return C[0] = dart.fn(main.main, T.VoidTovoid());
    },
    get C1() {
      return C[1] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: null,
        [Text_textSpan]: null,
        [Text_data]: "Jhon Shoes"
      });
    },
    get C2() {
      return C[2] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 8,
        [EdgeInsets_right]: 8,
        [EdgeInsets_top]: 8,
        [EdgeInsets_left]: 8
      });
    },
    get C3() {
      return C[3] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: 16,
        [SizedBox_width]: null
      });
    },
    get C5() {
      return C[5] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: null,
        [IconData_fontFamily]: "MaterialIcons",
        [IconData_codePoint]: 61464
      });
    },
    get C4() {
      return C[4] = dart.const({
        __proto__: icon.Icon.prototype,
        [Widget_key]: null,
        [Icon_textDirection]: null,
        [Icon_semanticLabel]: null,
        [Icon_shadows]: null,
        [Icon_color]: null,
        [Icon_opticalSize]: null,
        [Icon_grade]: null,
        [Icon_weight]: null,
        [Icon_fill]: null,
        [Icon_size]: null,
        [Icon_icon]: C[5] || CT.C5
      });
    },
    get C7() {
      return C[7] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: null,
        [IconData_fontFamily]: "MaterialIcons",
        [IconData_codePoint]: 62046
      });
    },
    get C6() {
      return C[6] = dart.const({
        __proto__: icon.Icon.prototype,
        [Widget_key]: null,
        [Icon_textDirection]: null,
        [Icon_semanticLabel]: null,
        [Icon_shadows]: null,
        [Icon_color]: null,
        [Icon_opticalSize]: null,
        [Icon_grade]: null,
        [Icon_weight]: null,
        [Icon_fill]: null,
        [Icon_size]: null,
        [Icon_icon]: C[7] || CT.C7
      });
    },
    get C8() {
      return C[8] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: null,
        [Text_textSpan]: null,
        [Text_data]: "Enviar"
      });
    },
    get C9() {
      return C[9] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: null,
        [Text_textSpan]: null,
        [Text_data]: "Cancelar"
      });
    },
    get C10() {
      return C[10] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: 0,
        [SizedBox_width]: 0
      });
    },
    get C11() {
      return C[11] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: null,
        [Text_textSpan]: null,
        [Text_data]: "Produtos"
      });
    },
    get C14() {
      return C[14] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4279042048
      });
    },
    get C13() {
      return C[13] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: null,
        [TextStyle_fontSize]: 24,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: C[14] || CT.C14,
        [TextStyle_inherit]: true
      });
    },
    get C12() {
      return C[12] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: C[13] || CT.C13,
        [Text_textSpan]: null,
        [Text_data]: "Lista de produtos"
      });
    },
    get C15() {
      return C[15] = dart.const({
        __proto__: divider.Divider.prototype,
        [Widget_key]: null,
        [Divider_color]: null,
        [Divider_endIndent]: null,
        [Divider_indent]: null,
        [Divider_thickness]: null,
        [Divider_height]: null
      });
    },
    get C16() {
      return C[16] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: C[13] || CT.C13,
        [Text_textSpan]: null,
        [Text_data]: "Quantidade"
      });
    },
    get C18() {
      return C[18] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: null,
        [IconData_fontFamily]: "MaterialIcons",
        [IconData_codePoint]: 60981
      });
    },
    get C17() {
      return C[17] = dart.const({
        __proto__: icon.Icon.prototype,
        [Widget_key]: null,
        [Icon_textDirection]: null,
        [Icon_semanticLabel]: null,
        [Icon_shadows]: null,
        [Icon_color]: null,
        [Icon_opticalSize]: null,
        [Icon_grade]: null,
        [Icon_weight]: null,
        [Icon_fill]: null,
        [Icon_size]: null,
        [Icon_icon]: C[18] || CT.C18
      });
    },
    get C21() {
      return C[21] = dart.const({
        __proto__: borders.BorderStyle.prototype,
        [_Enum__name]: "solid",
        [_Enum_index]: 1
      });
    },
    get C20() {
      return C[20] = dart.const({
        __proto__: borders.BorderSide.prototype,
        [BorderSide_strokeAlign]: -1,
        [BorderSide_style]: C[21] || CT.C21,
        [BorderSide_width]: 1,
        [BorderSide_color]: C[14] || CT.C14
      });
    },
    get C23() {
      return C[23] = dart.const({
        __proto__: ui.Radius.prototype,
        [Radius_y]: 4,
        [Radius_x]: 4
      });
    },
    get C22() {
      return C[22] = dart.const({
        __proto__: border_radius.BorderRadius.prototype,
        [BorderRadius_bottomRight]: C[23] || CT.C23,
        [BorderRadius_bottomLeft]: C[23] || CT.C23,
        [BorderRadius_topRight]: C[23] || CT.C23,
        [BorderRadius_topLeft]: C[23] || CT.C23
      });
    },
    get C19() {
      return C[19] = dart.const({
        __proto__: input_border.OutlineInputBorder.prototype,
        [InputBorder_borderSide]: C[20] || CT.C20,
        [OutlineInputBorder_borderRadius]: C[22] || CT.C22,
        [OutlineInputBorder_gapPadding]: 4
      });
    },
    get C24() {
      return C[24] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: null,
        [Text_textSpan]: null,
        [Text_data]: "Confirmação do pedido"
      });
    },
    get C25() {
      return C[25] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: null,
        [Text_textSpan]: null,
        [Text_data]: "voltar"
      });
    },
    get C28() {
      return C[28] = dart.const({
        __proto__: ui.FontWeight.prototype,
        [FontWeight_value]: 700,
        [FontWeight_index]: 6
      });
    },
    get C29() {
      return C[29] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294967295
      });
    },
    get C27() {
      return C[27] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: C[28] || CT.C28,
        [TextStyle_fontSize]: 20,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: C[29] || CT.C29,
        [TextStyle_inherit]: true
      });
    },
    get C26() {
      return C[26] = dart.const({
        __proto__: app_bar_theme.AppBarTheme.prototype,
        [AppBarTheme_backwardsCompatibility]: null,
        [AppBarTheme_systemOverlayStyle]: null,
        [AppBarTheme_titleTextStyle]: C[27] || CT.C27,
        [AppBarTheme_toolbarTextStyle]: null,
        [AppBarTheme_toolbarHeight]: null,
        [AppBarTheme_titleSpacing]: null,
        [AppBarTheme_centerTitle]: null,
        [AppBarTheme_textTheme]: null,
        [AppBarTheme_actionsIconTheme]: null,
        [AppBarTheme_iconTheme]: null,
        [AppBarTheme_shape]: null,
        [AppBarTheme_surfaceTintColor]: null,
        [AppBarTheme_shadowColor]: null,
        [AppBarTheme_scrolledUnderElevation]: null,
        [AppBarTheme_elevation]: null,
        [AppBarTheme_foregroundColor]: null,
        [AppBarTheme_backgroundColor]: C[14] || CT.C14,
        [AppBarTheme_brightness]: null
      });
    },
    get C33() {
      return C[33] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 2132918207
      });
    },
    get C32() {
      return C[32] = dart.const({
        __proto__: borders.BorderSide.prototype,
        [BorderSide_strokeAlign]: -1,
        [BorderSide_style]: C[21] || CT.C21,
        [BorderSide_width]: 1,
        [BorderSide_color]: C[33] || CT.C33
      });
    },
    get C31() {
      return C[31] = dart.const({
        __proto__: input_border.OutlineInputBorder.prototype,
        [InputBorder_borderSide]: C[32] || CT.C32,
        [OutlineInputBorder_borderRadius]: C[22] || CT.C22,
        [OutlineInputBorder_gapPadding]: 4
      });
    },
    get C34() {
      return C[34] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4290715950
      });
    },
    get C35() {
      return C[35] = dart.const({
        __proto__: input_decorator.FloatingLabelAlignment.prototype,
        [FloatingLabelAlignment__x]: -1
      });
    },
    get C36() {
      return C[36] = dart.const({
        __proto__: input_decorator.FloatingLabelBehavior.prototype,
        [_Enum__name]: "auto",
        [_Enum_index]: 1
      });
    },
    get C30() {
      return C[30] = dart.const({
        __proto__: input_decorator.InputDecorationTheme.prototype,
        [InputDecorationTheme_constraints]: null,
        [InputDecorationTheme_alignLabelWithHint]: false,
        [InputDecorationTheme_border]: null,
        [InputDecorationTheme_enabledBorder]: C[19] || CT.C19,
        [InputDecorationTheme_disabledBorder]: null,
        [InputDecorationTheme_focusedErrorBorder]: null,
        [InputDecorationTheme_focusedBorder]: C[31] || CT.C31,
        [InputDecorationTheme_errorBorder]: null,
        [InputDecorationTheme_hoverColor]: null,
        [InputDecorationTheme_focusColor]: null,
        [InputDecorationTheme_activeIndicatorBorder]: null,
        [InputDecorationTheme_outlineBorder]: null,
        [InputDecorationTheme_fillColor]: null,
        [InputDecorationTheme_filled]: false,
        [InputDecorationTheme_counterStyle]: null,
        [InputDecorationTheme_suffixIconColor]: null,
        [InputDecorationTheme_suffixStyle]: null,
        [InputDecorationTheme_prefixIconColor]: C[34] || CT.C34,
        [InputDecorationTheme_prefixStyle]: null,
        [InputDecorationTheme_iconColor]: null,
        [InputDecorationTheme_isCollapsed]: false,
        [InputDecorationTheme_contentPadding]: null,
        [InputDecorationTheme_isDense]: false,
        [InputDecorationTheme_floatingLabelAlignment]: C[35] || CT.C35,
        [InputDecorationTheme_floatingLabelBehavior]: C[36] || CT.C36,
        [InputDecorationTheme_errorMaxLines]: null,
        [InputDecorationTheme_errorStyle]: null,
        [InputDecorationTheme_hintStyle]: null,
        [InputDecorationTheme_helperMaxLines]: null,
        [InputDecorationTheme_helperStyle]: null,
        [InputDecorationTheme_floatingLabelStyle]: null,
        [InputDecorationTheme_labelStyle]: null
      });
    }
  }, false);
  var C = Array(37).fill(void 0);
  var I = [
    "file:///zapp/project/lib/main.dart",
    "package:flutter_app/products.dart"
  ];
  $46zapp_entry.runAppGuarded = function runAppGuarded() {
    async.runZonedGuarded(core.Null, dart.fn(() => {
      if (T.ListOfStringTodynamic().is(C[0] || CT.C0)) {
        T.ListOfStringTodynamic().as(C[0] || CT.C0)(T.JSArrayOfString().of([]));
      } else {
        (C[0] || CT.C0)();
      }
      if (js.context.hasProperty("__notifyFlutterRendered")) {
        async.Future.delayed(new core.Duration.new({milliseconds: 250})).then(core.Null, dart.fn(_ => {
          js.context.callMethod("__notifyFlutterRendered", [false]);
        }, T.dynamicToNull()));
      }
    }, T.VoidToNull()), dart.fn((e, stackTrace) => {
      if (js.context.hasProperty("zappHandlerUserError")) {
        js.context.callMethod("zappHandlerUserError", [e[$toString](), stackTrace.toString()]);
      }
    }, T.ObjectAndStackTraceTovoid()), {zoneSpecification: new async._ZoneSpecification.new({print: dart.fn((self, parent, zone, line) => {
          if (js.context.hasProperty("zappHandlerUserPrint")) {
            js.context.callMethod("zappHandlerUserPrint", [line]);
          }
        }, T.ZoneAndZoneDelegateAndZone__Tovoid())})});
  };
  $46zapp_entry.main = function main$() {
    return async.async(dart.void, function* main() {
      yield ui.webOnlyWarmupEngine({runApp: dart.fn(() => {
          $46zapp_entry.runAppGuarded();
        }, T.VoidToNull()), registerPlugins: dart.fn(() => {
          web_plugin_registrant.registerPlugins();
        }, T.VoidToNull())});
    });
  };
  main.MyApp = class MyApp extends framework.StatelessWidget {
    build(context) {
      return new app.MaterialApp.new({title: "Sample Input", theme: theme$.tema, home: new main.Forms.new()});
    }
    static ['_#new#tearOff']() {
      return new main.MyApp.new();
    }
  };
  (main.MyApp.new = function() {
    main.MyApp.__proto__.new.call(this);
    ;
  }).prototype = main.MyApp.prototype;
  dart.addTypeTests(main.MyApp);
  dart.addTypeCaches(main.MyApp);
  dart.setMethodSignature(main.MyApp, () => ({
    __proto__: dart.getMethods(main.MyApp.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(main.MyApp, I[0]);
  main.Forms = class Forms extends framework.StatefulWidget {
    createState() {
      return new main.FormsState.new();
    }
    static ['_#new#tearOff']() {
      return new main.Forms.new();
    }
  };
  (main.Forms.new = function() {
    main.Forms.__proto__.new.call(this);
    ;
  }).prototype = main.Forms.prototype;
  dart.addTypeTests(main.Forms);
  dart.addTypeCaches(main.Forms);
  dart.setMethodSignature(main.Forms, () => ({
    __proto__: dart.getMethods(main.Forms.__proto__),
    createState: dart.fnType(main.FormsState, [])
  }));
  dart.setLibraryUri(main.Forms, I[0]);
  var textColor = dart.privateName(main, "FormsState.textColor");
  var textColorWarning = dart.privateName(main, "FormsState.textColorWarning");
  var borderColor = dart.privateName(main, "FormsState.borderColor");
  var envio = dart.privateName(main, "FormsState.envio");
  var _email = dart.privateName(main, "_email");
  var _senha = dart.privateName(main, "_senha");
  var _IsValid = dart.privateName(main, "_IsValid");
  var _result = dart.privateName(main, "_result");
  var _cancelar = dart.privateName(main, "_cancelar");
  var Widget_key = dart.privateName(framework, "Widget.key");
  var Text_selectionColor = dart.privateName(text, "Text.selectionColor");
  var Text_textHeightBehavior = dart.privateName(text, "Text.textHeightBehavior");
  var Text_textWidthBasis = dart.privateName(text, "Text.textWidthBasis");
  var Text_semanticsLabel = dart.privateName(text, "Text.semanticsLabel");
  var Text_maxLines = dart.privateName(text, "Text.maxLines");
  var Text_textScaleFactor = dart.privateName(text, "Text.textScaleFactor");
  var Text_overflow = dart.privateName(text, "Text.overflow");
  var Text_softWrap = dart.privateName(text, "Text.softWrap");
  var Text_locale = dart.privateName(text, "Text.locale");
  var Text_textDirection = dart.privateName(text, "Text.textDirection");
  var Text_textAlign = dart.privateName(text, "Text.textAlign");
  var Text_strutStyle = dart.privateName(text, "Text.strutStyle");
  var Text_style = dart.privateName(text, "Text.style");
  var Text_textSpan = dart.privateName(text, "Text.textSpan");
  var Text_data = dart.privateName(text, "Text.data");
  var EdgeInsets_bottom = dart.privateName(edge_insets, "EdgeInsets.bottom");
  var EdgeInsets_right = dart.privateName(edge_insets, "EdgeInsets.right");
  var EdgeInsets_top = dart.privateName(edge_insets, "EdgeInsets.top");
  var EdgeInsets_left = dart.privateName(edge_insets, "EdgeInsets.left");
  var SingleChildRenderObjectWidget_child = dart.privateName(framework, "SingleChildRenderObjectWidget.child");
  var SizedBox_height = dart.privateName(basic, "SizedBox.height");
  var SizedBox_width = dart.privateName(basic, "SizedBox.width");
  var Icon_textDirection = dart.privateName(icon, "Icon.textDirection");
  var Icon_semanticLabel = dart.privateName(icon, "Icon.semanticLabel");
  var Icon_shadows = dart.privateName(icon, "Icon.shadows");
  var Icon_color = dart.privateName(icon, "Icon.color");
  var Icon_opticalSize = dart.privateName(icon, "Icon.opticalSize");
  var Icon_grade = dart.privateName(icon, "Icon.grade");
  var Icon_weight = dart.privateName(icon, "Icon.weight");
  var Icon_fill = dart.privateName(icon, "Icon.fill");
  var Icon_size = dart.privateName(icon, "Icon.size");
  var IconData_matchTextDirection = dart.privateName(icon_data, "IconData.matchTextDirection");
  var IconData_fontPackage = dart.privateName(icon_data, "IconData.fontPackage");
  var IconData_fontFamily = dart.privateName(icon_data, "IconData.fontFamily");
  var IconData_codePoint = dart.privateName(icon_data, "IconData.codePoint");
  var Icon_icon = dart.privateName(icon, "Icon.icon");
  main.FormsState = class FormsState extends framework.State$(main.Forms) {
    get textColor() {
      return this[textColor];
    }
    set textColor(value) {
      this[textColor] = value;
    }
    get textColorWarning() {
      return this[textColorWarning];
    }
    set textColorWarning(value) {
      this[textColorWarning] = value;
    }
    get borderColor() {
      return this[borderColor];
    }
    set borderColor(value) {
      this[borderColor] = value;
    }
    get envio() {
      return this[envio];
    }
    set envio(value) {
      this[envio] = value;
    }
    [_cancelar]() {
      this[_email].text = "";
      let email = this[_email].text;
      this.setState(dart.fn(() => {
        this[_result] = email;
      }, T.VoidTovoid()));
      this[_senha].text = "";
      let senha = this[_senha].text;
      this.setState(dart.fn(() => {
        this[_result] = senha;
      }, T.VoidTovoid()));
    }
    build(context) {
      return new scaffold.Scaffold.new({appBar: new app_bar.AppBar.new({title: C[1] || CT.C1}), body: new basic.Align.new({alignment: alignment.Alignment.topCenter, child: new scroll_view.ListView.new({padding: C[2] || CT.C2, children: T.JSArrayOfWidget().of([new image.Image.asset("assets/images/logo.jpg"), C[3] || CT.C3, new basic.SizedBox.new({width: 300, child: new text_field.TextField.new({controller: this[_email], keyboardType: text_input.TextInputType.text, decoration: new input_decorator.InputDecoration.new({hintText: "Entre com email", prefixIcon: C[4] || CT.C4}), onChanged: dart.fn(_ => this.setState(dart.fn(() => {
                    this[_IsValid] = this[_email].text[$isNotEmpty] && this[_senha].text[$isNotEmpty];
                  }, T.VoidTovoid())), T.StringTovoid())})}), C[3] || CT.C3, new basic.SizedBox.new({width: 300, child: new text_field.TextField.new({controller: this[_senha], keyboardType: text_input.TextInputType.text, decoration: new input_decorator.InputDecoration.new({hintText: "Entre com a senha", prefixIcon: C[6] || CT.C6}), onChanged: dart.fn(_ => this.setState(dart.fn(() => {
                    this[_IsValid] = this[_email].text[$isNotEmpty] && this[_senha].text[$isNotEmpty];
                  }, T.VoidTovoid())), T.StringTovoid())})}), C[3] || CT.C3, !this.envio ? new basic.SizedBox.new({width: 300, child: new basic.Row.new({mainAxisAlignment: flex.MainAxisAlignment.spaceEvenly, children: T.JSArrayOfWidget().of([new elevated_button.ElevatedButton.new({style: elevated_button.ElevatedButton.styleFrom({backgroundColor: new ui.Color.fromRGBO(191, 33, 46, 1)}), onPressed: this[_IsValid] ? dart.fn(() => {
                        navigator.Navigator.push(dart.dynamic, context, new page.MaterialPageRoute.new({builder: dart.fn(context => new main.SecondPage.new(), T.BuildContextToSecondPage())}));
                      }, T.VoidTovoid()) : null, child: C[8] || CT.C8}), new elevated_button.ElevatedButton.new({onPressed: dart.bind(this, _cancelar), child: C[9] || CT.C9})])})}) : C[10] || CT.C10, C[3] || CT.C3])})})});
    }
    static ['_#new#tearOff']() {
      return new main.FormsState.new();
    }
  };
  (main.FormsState.new = function() {
    this[_email] = new editable_text.TextEditingController.new();
    this[_senha] = new editable_text.TextEditingController.new();
    this[_IsValid] = false;
    this[textColor] = colors.Colors.black;
    this[textColorWarning] = colors.Colors.grey;
    this[borderColor] = colors.Colors.grey;
    this[_result] = "";
    this[envio] = false;
    main.FormsState.__proto__.new.call(this);
    ;
  }).prototype = main.FormsState.prototype;
  dart.addTypeTests(main.FormsState);
  dart.addTypeCaches(main.FormsState);
  dart.setMethodSignature(main.FormsState, () => ({
    __proto__: dart.getMethods(main.FormsState.__proto__),
    [_cancelar]: dart.fnType(dart.void, []),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(main.FormsState, I[0]);
  dart.setFieldSignature(main.FormsState, () => ({
    __proto__: dart.getFields(main.FormsState.__proto__),
    [_email]: dart.finalFieldType(editable_text.TextEditingController),
    [_senha]: dart.finalFieldType(editable_text.TextEditingController),
    [_IsValid]: dart.fieldType(core.bool),
    textColor: dart.fieldType(ui.Color),
    textColorWarning: dart.fieldType(ui.Color),
    borderColor: dart.fieldType(ui.Color),
    [_result]: dart.fieldType(core.String),
    envio: dart.fieldType(core.bool)
  }));
  main.SecondPage = class SecondPage extends framework.StatefulWidget {
    createState() {
      return new main.SecondPageState.new();
    }
    static ['_#new#tearOff']() {
      return new main.SecondPage.new();
    }
  };
  (main.SecondPage.new = function() {
    main.SecondPage.__proto__.new.call(this);
    ;
  }).prototype = main.SecondPage.prototype;
  dart.addTypeTests(main.SecondPage);
  dart.addTypeCaches(main.SecondPage);
  dart.setMethodSignature(main.SecondPage, () => ({
    __proto__: dart.getMethods(main.SecondPage.__proto__),
    createState: dart.fnType(main.SecondPageState, [])
  }));
  dart.setLibraryUri(main.SecondPage, I[0]);
  var items = dart.privateName(main, "SecondPageState.items");
  var textColor$ = dart.privateName(main, "SecondPageState.textColor");
  var textColorWarning$ = dart.privateName(main, "SecondPageState.textColorWarning");
  var borderColor$ = dart.privateName(main, "SecondPageState.borderColor");
  var envio$ = dart.privateName(main, "SecondPageState.envio");
  var _nome = dart.privateName(main, "_nome");
  var _selectItem = dart.privateName(main, "_selectItem");
  var _enviar = dart.privateName(main, "_enviar");
  var TextStyle_overflow = dart.privateName(text_style, "TextStyle.overflow");
  var TextStyle_fontVariations = dart.privateName(text_style, "TextStyle.fontVariations");
  var TextStyle_fontFeatures = dart.privateName(text_style, "TextStyle.fontFeatures");
  var TextStyle_shadows = dart.privateName(text_style, "TextStyle.shadows");
  var TextStyle_debugLabel = dart.privateName(text_style, "TextStyle.debugLabel");
  var TextStyle_decorationThickness = dart.privateName(text_style, "TextStyle.decorationThickness");
  var TextStyle_decorationStyle = dart.privateName(text_style, "TextStyle.decorationStyle");
  var TextStyle_decorationColor = dart.privateName(text_style, "TextStyle.decorationColor");
  var TextStyle_decoration = dart.privateName(text_style, "TextStyle.decoration");
  var TextStyle_background = dart.privateName(text_style, "TextStyle.background");
  var TextStyle_foreground = dart.privateName(text_style, "TextStyle.foreground");
  var TextStyle_locale = dart.privateName(text_style, "TextStyle.locale");
  var TextStyle_leadingDistribution = dart.privateName(text_style, "TextStyle.leadingDistribution");
  var TextStyle_height = dart.privateName(text_style, "TextStyle.height");
  var TextStyle_textBaseline = dart.privateName(text_style, "TextStyle.textBaseline");
  var TextStyle_wordSpacing = dart.privateName(text_style, "TextStyle.wordSpacing");
  var TextStyle_letterSpacing = dart.privateName(text_style, "TextStyle.letterSpacing");
  var TextStyle_fontStyle = dart.privateName(text_style, "TextStyle.fontStyle");
  var TextStyle_fontWeight = dart.privateName(text_style, "TextStyle.fontWeight");
  var TextStyle_fontSize = dart.privateName(text_style, "TextStyle.fontSize");
  var TextStyle__package = dart.privateName(text_style, "TextStyle._package");
  var TextStyle__fontFamilyFallback = dart.privateName(text_style, "TextStyle._fontFamilyFallback");
  var TextStyle_fontFamily = dart.privateName(text_style, "TextStyle.fontFamily");
  var TextStyle_backgroundColor = dart.privateName(text_style, "TextStyle.backgroundColor");
  var Color_value = dart.privateName(ui, "Color.value");
  var TextStyle_color = dart.privateName(text_style, "TextStyle.color");
  var TextStyle_inherit = dart.privateName(text_style, "TextStyle.inherit");
  var Divider_color = dart.privateName(divider, "Divider.color");
  var Divider_endIndent = dart.privateName(divider, "Divider.endIndent");
  var Divider_indent = dart.privateName(divider, "Divider.indent");
  var Divider_thickness = dart.privateName(divider, "Divider.thickness");
  var Divider_height = dart.privateName(divider, "Divider.height");
  var BorderSide_strokeAlign = dart.privateName(borders, "BorderSide.strokeAlign");
  var _Enum__name = dart.privateName(core, "_Enum._name");
  var _Enum_index = dart.privateName(core, "_Enum.index");
  var BorderSide_style = dart.privateName(borders, "BorderSide.style");
  var BorderSide_width = dart.privateName(borders, "BorderSide.width");
  var BorderSide_color = dart.privateName(borders, "BorderSide.color");
  var InputBorder_borderSide = dart.privateName(input_border, "InputBorder.borderSide");
  var Radius_y = dart.privateName(ui, "Radius.y");
  var Radius_x = dart.privateName(ui, "Radius.x");
  var BorderRadius_bottomRight = dart.privateName(border_radius, "BorderRadius.bottomRight");
  var BorderRadius_bottomLeft = dart.privateName(border_radius, "BorderRadius.bottomLeft");
  var BorderRadius_topRight = dart.privateName(border_radius, "BorderRadius.topRight");
  var BorderRadius_topLeft = dart.privateName(border_radius, "BorderRadius.topLeft");
  var OutlineInputBorder_borderRadius = dart.privateName(input_border, "OutlineInputBorder.borderRadius");
  var OutlineInputBorder_gapPadding = dart.privateName(input_border, "OutlineInputBorder.gapPadding");
  main.SecondPageState = class SecondPageState extends framework.State$(main.SecondPage) {
    get items() {
      return this[items];
    }
    set items(value) {
      super.items = value;
    }
    get textColor() {
      return this[textColor$];
    }
    set textColor(value) {
      this[textColor$] = value;
    }
    get textColorWarning() {
      return this[textColorWarning$];
    }
    set textColorWarning(value) {
      this[textColorWarning$] = value;
    }
    get borderColor() {
      return this[borderColor$];
    }
    set borderColor(value) {
      this[borderColor$] = value;
    }
    get envio() {
      return this[envio$];
    }
    set envio(value) {
      this[envio$] = value;
    }
    changeSelectedItem(e) {
      this.setState(dart.fn(() => {
        this[_selectItem] = e;
        this[_result] = this[_selectItem];
      }, T.VoidTovoid()));
    }
    [_enviar]() {
      let nome = this[_nome].text;
      let selecionado = this[_selectItem];
      const changeTextColor = newColor => {
        this.setState(dart.fn(() => {
          this.textColor = newColor;
        }, T.VoidTovoid()));
      };
      dart.fn(changeTextColor, T.ColorTovoid());
      const changeBorderColor = newColor => {
        this.setState(dart.fn(() => {
          this.borderColor = newColor;
        }, T.VoidTovoid()));
      };
      dart.fn(changeBorderColor, T.ColorTovoid());
      const changeEnvio = e => {
        this.setState(dart.fn(() => {
          this.envio = e;
        }, T.VoidTovoid()));
      };
      dart.fn(changeEnvio, T.boolTovoid());
      this.setState(dart.fn(() => {
        if (nome === "" || selecionado === "") {
          changeTextColor(colors.Colors.red);
          if (nome === "") {
            this[_result] = "Precisa informar a quantidade";
          } else if (selecionado === "") {
            this[_result] = "Escolha pelo menos um item";
          }
          changeBorderColor(colors.Colors.red);
        } else {
          changeEnvio(true);
          changeTextColor(new ui.Color.fromRGBO(191, 33, 46, 1));
          changeBorderColor(colors.Colors.grey);
          this[_result] = nome;
          this[_selectItem] = selecionado;
          this[_result] = selecionado + "  Quantidade: " + nome;
        }
        navigator.Navigator.push(dart.dynamic, this.context, new page.MaterialPageRoute.new({builder: dart.fn(context => new main.ConfirmPage.new({result: this[_result]}), T.BuildContextToConfirmPage())}));
      }, T.VoidTovoid()));
    }
    [_cancelar]() {
      this[_nome].text = "";
      let nome = this[_nome].text;
      let sel = this[_selectItem];
      this.setState(dart.fn(() => {
        this[_result] = sel + " " + nome;
      }, T.VoidTovoid()));
    }
    build(context) {
      return new scaffold.Scaffold.new({appBar: new app_bar.AppBar.new({title: C[11] || CT.C11}), body: new basic.Align.new({alignment: alignment.Alignment.center, child: new basic.Column.new({mainAxisSize: flex.MainAxisSize.max, children: T.JSArrayOfWidget().of([C[3] || CT.C3, C[12] || CT.C12, C[3] || CT.C3, new container.Container.new({width: 600, height: 200, decoration: new box_decoration.BoxDecoration.new({border: box_border.Border.all({color: new ui.Color.fromRGBO(13, 0, 0, 1), width: 1})}), child: new scroll_view.ListView.builder({shrinkWrap: true, itemCount: this.items[$length], itemBuilder: dart.fn((context, index) => {
                    let items_card = this.items[$_get](index);
                    return new list_tile.ListTile.new({leading: new image.Image.asset(items_card.image), title: new text.Text.new(items_card.title), onTap: dart.fn(() => {
                        core.print(this.items[$_get](index).title);
                        this.changeSelectedItem("Porduto: " + this.items[$_get](index).title);
                      }, T.VoidTovoid())});
                  }, T.BuildContextAndintToListTile())})}), C[15] || CT.C15, C[3] || CT.C3, C[16] || CT.C16, C[3] || CT.C3, new basic.SizedBox.new({width: 300, child: new text_field.TextField.new({controller: this[_nome], keyboardType: text_input.TextInputType.text, decoration: new input_decorator.InputDecoration.new({hintText: "Quantidade", prefixIcon: C[17] || CT.C17, focusedBorder: C[19] || CT.C19})})}), C[3] || CT.C3, C[15] || CT.C15, !this.envio ? new basic.SizedBox.new({width: 300, child: new basic.Row.new({mainAxisAlignment: flex.MainAxisAlignment.spaceEvenly, children: T.JSArrayOfWidget().of([new elevated_button.ElevatedButton.new({style: elevated_button.ElevatedButton.styleFrom({backgroundColor: new ui.Color.fromRGBO(191, 33, 46, 1)}), onPressed: dart.bind(this, _enviar), child: C[8] || CT.C8}), new elevated_button.ElevatedButton.new({onPressed: dart.bind(this, _cancelar), child: C[9] || CT.C9})])})}) : C[10] || CT.C10, C[3] || CT.C3, new text.Text.new(this[_result], {style: new text_style.TextStyle.new({fontSize: 24, color: this.textColor})})])})})});
    }
    static ['_#new#tearOff']() {
      return new main.SecondPageState.new();
    }
  };
  (main.SecondPageState.new = function() {
    this[items] = T.ListOfItem().as(products.Item.getProducts());
    this[_nome] = new editable_text.TextEditingController.new();
    this[textColor$] = colors.Colors.black;
    this[textColorWarning$] = colors.Colors.grey;
    this[borderColor$] = colors.Colors.grey;
    this[_result] = "";
    this[_selectItem] = "";
    this[envio$] = false;
    main.SecondPageState.__proto__.new.call(this);
    ;
  }).prototype = main.SecondPageState.prototype;
  dart.addTypeTests(main.SecondPageState);
  dart.addTypeCaches(main.SecondPageState);
  dart.setMethodSignature(main.SecondPageState, () => ({
    __proto__: dart.getMethods(main.SecondPageState.__proto__),
    changeSelectedItem: dart.fnType(dart.void, [core.String]),
    [_enviar]: dart.fnType(dart.void, []),
    [_cancelar]: dart.fnType(dart.void, []),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(main.SecondPageState, I[0]);
  dart.setFieldSignature(main.SecondPageState, () => ({
    __proto__: dart.getFields(main.SecondPageState.__proto__),
    items: dart.finalFieldType(core.List$(products.Item)),
    [_nome]: dart.finalFieldType(editable_text.TextEditingController),
    textColor: dart.fieldType(ui.Color),
    textColorWarning: dart.fieldType(ui.Color),
    borderColor: dart.fieldType(ui.Color),
    [_result]: dart.fieldType(core.String),
    [_selectItem]: dart.fieldType(core.String),
    envio: dart.fieldType(core.bool)
  }));
  var result$ = dart.privateName(main, "ConfirmPage.result");
  main.ConfirmPage = class ConfirmPage extends framework.StatelessWidget {
    get result() {
      return this[result$];
    }
    set result(value) {
      super.result = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let result = opts && 'result' in opts ? opts.result : null;
      return new main.ConfirmPage.new({key: key, result: result});
    }
    build(context) {
      return new scaffold.Scaffold.new({appBar: new app_bar.AppBar.new({backgroundColor: theme.Theme.of(context).colorScheme.secondary, title: C[24] || CT.C24}), body: new basic.Align.new({alignment: alignment.Alignment.center, child: new basic.Column.new({mainAxisSize: flex.MainAxisSize.min, children: T.JSArrayOfWidget().of([new text.Text.new(this.result, {style: C[13] || CT.C13}), new elevated_button.ElevatedButton.new({style: elevated_button.ElevatedButton.styleFrom({backgroundColor: new ui.Color.fromRGBO(191, 33, 46, 1)}), onPressed: dart.fn(() => {
                  navigator.Navigator.push(dart.dynamic, context, new page.MaterialPageRoute.new({builder: dart.fn(context => new main.FinalPage.new(), T.BuildContextToFinalPage())}));
                }, T.VoidTovoid()), child: C[8] || CT.C8})])})})});
    }
  };
  (main.ConfirmPage.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let result = opts && 'result' in opts ? opts.result : null;
    this[result$] = result;
    main.ConfirmPage.__proto__.new.call(this, {key: key});
    ;
  }).prototype = main.ConfirmPage.prototype;
  dart.addTypeTests(main.ConfirmPage);
  dart.addTypeCaches(main.ConfirmPage);
  dart.setMethodSignature(main.ConfirmPage, () => ({
    __proto__: dart.getMethods(main.ConfirmPage.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(main.ConfirmPage, I[0]);
  dart.setFieldSignature(main.ConfirmPage, () => ({
    __proto__: dart.getFields(main.ConfirmPage.__proto__),
    result: dart.finalFieldType(core.String)
  }));
  main.FinalPage = class FinalPage extends framework.StatelessWidget {
    build(context) {
      return new scaffold.Scaffold.new({appBar: new app_bar.AppBar.new({title: C[25] || CT.C25}), body: new basic.Align.new({alignment: alignment.Alignment.center, child: new basic.Column.new({mainAxisSize: flex.MainAxisSize.min, children: T.JSArrayOfWidget().of([new image.Image.asset("assets/images/logo.jpg"), C[3] || CT.C3, new text.Text.new("Pedido confirmado!", {style: C[13] || CT.C13}), new text.Text.new("Obrigado e volte sempre!", {style: C[13] || CT.C13})])})})});
    }
    static ['_#new#tearOff']() {
      return new main.FinalPage.new();
    }
  };
  (main.FinalPage.new = function() {
    main.FinalPage.__proto__.new.call(this);
    ;
  }).prototype = main.FinalPage.prototype;
  dart.addTypeTests(main.FinalPage);
  dart.addTypeCaches(main.FinalPage);
  dart.setMethodSignature(main.FinalPage, () => ({
    __proto__: dart.getMethods(main.FinalPage.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(main.FinalPage, I[0]);
  main.main = function main$0() {
    binding.runApp(new main.MyApp.new());
  };
  web_plugin_registrant.registerPlugins = function registerPlugins() {
  };
  var AppBarTheme_backwardsCompatibility = dart.privateName(app_bar_theme, "AppBarTheme.backwardsCompatibility");
  var AppBarTheme_systemOverlayStyle = dart.privateName(app_bar_theme, "AppBarTheme.systemOverlayStyle");
  var FontWeight_value = dart.privateName(ui, "FontWeight.value");
  var FontWeight_index = dart.privateName(ui, "FontWeight.index");
  var AppBarTheme_titleTextStyle = dart.privateName(app_bar_theme, "AppBarTheme.titleTextStyle");
  var AppBarTheme_toolbarTextStyle = dart.privateName(app_bar_theme, "AppBarTheme.toolbarTextStyle");
  var AppBarTheme_toolbarHeight = dart.privateName(app_bar_theme, "AppBarTheme.toolbarHeight");
  var AppBarTheme_titleSpacing = dart.privateName(app_bar_theme, "AppBarTheme.titleSpacing");
  var AppBarTheme_centerTitle = dart.privateName(app_bar_theme, "AppBarTheme.centerTitle");
  var AppBarTheme_textTheme = dart.privateName(app_bar_theme, "AppBarTheme.textTheme");
  var AppBarTheme_actionsIconTheme = dart.privateName(app_bar_theme, "AppBarTheme.actionsIconTheme");
  var AppBarTheme_iconTheme = dart.privateName(app_bar_theme, "AppBarTheme.iconTheme");
  var AppBarTheme_shape = dart.privateName(app_bar_theme, "AppBarTheme.shape");
  var AppBarTheme_surfaceTintColor = dart.privateName(app_bar_theme, "AppBarTheme.surfaceTintColor");
  var AppBarTheme_shadowColor = dart.privateName(app_bar_theme, "AppBarTheme.shadowColor");
  var AppBarTheme_scrolledUnderElevation = dart.privateName(app_bar_theme, "AppBarTheme.scrolledUnderElevation");
  var AppBarTheme_elevation = dart.privateName(app_bar_theme, "AppBarTheme.elevation");
  var AppBarTheme_foregroundColor = dart.privateName(app_bar_theme, "AppBarTheme.foregroundColor");
  var AppBarTheme_backgroundColor = dart.privateName(app_bar_theme, "AppBarTheme.backgroundColor");
  var AppBarTheme_brightness = dart.privateName(app_bar_theme, "AppBarTheme.brightness");
  var InputDecorationTheme_constraints = dart.privateName(input_decorator, "InputDecorationTheme.constraints");
  var InputDecorationTheme_alignLabelWithHint = dart.privateName(input_decorator, "InputDecorationTheme.alignLabelWithHint");
  var InputDecorationTheme_border = dart.privateName(input_decorator, "InputDecorationTheme.border");
  var InputDecorationTheme_enabledBorder = dart.privateName(input_decorator, "InputDecorationTheme.enabledBorder");
  var InputDecorationTheme_disabledBorder = dart.privateName(input_decorator, "InputDecorationTheme.disabledBorder");
  var InputDecorationTheme_focusedErrorBorder = dart.privateName(input_decorator, "InputDecorationTheme.focusedErrorBorder");
  var InputDecorationTheme_focusedBorder = dart.privateName(input_decorator, "InputDecorationTheme.focusedBorder");
  var InputDecorationTheme_errorBorder = dart.privateName(input_decorator, "InputDecorationTheme.errorBorder");
  var InputDecorationTheme_hoverColor = dart.privateName(input_decorator, "InputDecorationTheme.hoverColor");
  var InputDecorationTheme_focusColor = dart.privateName(input_decorator, "InputDecorationTheme.focusColor");
  var InputDecorationTheme_activeIndicatorBorder = dart.privateName(input_decorator, "InputDecorationTheme.activeIndicatorBorder");
  var InputDecorationTheme_outlineBorder = dart.privateName(input_decorator, "InputDecorationTheme.outlineBorder");
  var InputDecorationTheme_fillColor = dart.privateName(input_decorator, "InputDecorationTheme.fillColor");
  var InputDecorationTheme_filled = dart.privateName(input_decorator, "InputDecorationTheme.filled");
  var InputDecorationTheme_counterStyle = dart.privateName(input_decorator, "InputDecorationTheme.counterStyle");
  var InputDecorationTheme_suffixIconColor = dart.privateName(input_decorator, "InputDecorationTheme.suffixIconColor");
  var InputDecorationTheme_suffixStyle = dart.privateName(input_decorator, "InputDecorationTheme.suffixStyle");
  var InputDecorationTheme_prefixIconColor = dart.privateName(input_decorator, "InputDecorationTheme.prefixIconColor");
  var InputDecorationTheme_prefixStyle = dart.privateName(input_decorator, "InputDecorationTheme.prefixStyle");
  var InputDecorationTheme_iconColor = dart.privateName(input_decorator, "InputDecorationTheme.iconColor");
  var InputDecorationTheme_isCollapsed = dart.privateName(input_decorator, "InputDecorationTheme.isCollapsed");
  var InputDecorationTheme_contentPadding = dart.privateName(input_decorator, "InputDecorationTheme.contentPadding");
  var InputDecorationTheme_isDense = dart.privateName(input_decorator, "InputDecorationTheme.isDense");
  var FloatingLabelAlignment__x = dart.privateName(input_decorator, "FloatingLabelAlignment._x");
  var InputDecorationTheme_floatingLabelAlignment = dart.privateName(input_decorator, "InputDecorationTheme.floatingLabelAlignment");
  var InputDecorationTheme_floatingLabelBehavior = dart.privateName(input_decorator, "InputDecorationTheme.floatingLabelBehavior");
  var InputDecorationTheme_errorMaxLines = dart.privateName(input_decorator, "InputDecorationTheme.errorMaxLines");
  var InputDecorationTheme_errorStyle = dart.privateName(input_decorator, "InputDecorationTheme.errorStyle");
  var InputDecorationTheme_hintStyle = dart.privateName(input_decorator, "InputDecorationTheme.hintStyle");
  var InputDecorationTheme_helperMaxLines = dart.privateName(input_decorator, "InputDecorationTheme.helperMaxLines");
  var InputDecorationTheme_helperStyle = dart.privateName(input_decorator, "InputDecorationTheme.helperStyle");
  var InputDecorationTheme_floatingLabelStyle = dart.privateName(input_decorator, "InputDecorationTheme.floatingLabelStyle");
  var InputDecorationTheme_labelStyle = dart.privateName(input_decorator, "InputDecorationTheme.labelStyle");
  dart.defineLazy(theme$, {
    /*theme$.tema*/get tema() {
      return theme_data.ThemeData.new({appBarTheme: C[26] || CT.C26, inputDecorationTheme: C[30] || CT.C30, elevatedButtonTheme: new elevated_button_theme.ElevatedButtonThemeData.new({style: elevated_button.ElevatedButton.styleFrom({backgroundColor: new ui.Color.fromRGBO(38, 34, 35, 0.8)})})});
    }
  }, false);
  var title$ = dart.privateName(products, "Item.title");
  var image$ = dart.privateName(products, "Item.image");
  products.Item = class Item extends core.Object {
    get title() {
      return this[title$];
    }
    set title(value) {
      super.title = value;
    }
    get image() {
      return this[image$];
    }
    set image(value) {
      super.image = value;
    }
    static ['_#new#tearOff'](opts) {
      let title = opts && 'title' in opts ? opts.title : null;
      let image = opts && 'image' in opts ? opts.image : null;
      return new products.Item.new({title: title, image: image});
    }
    static getProducts() {
      let items = T.JSArrayOfItem().of([new products.Item.new({title: "Chuteira Society Fifty III Umbro - Preto+Lima", image: "assets/images/fifty.png"}), new products.Item.new({title: "Chuteira Society Nike Beco 2 TF - Preto+Branco", image: "assets/images/nike.png"}), new products.Item.new({title: "Chuteira Futsal Adidas Artilheira VI - Preto+Pink", image: "assets/images/adidas.png"})]);
      return items;
    }
  };
  (products.Item.new = function(opts) {
    let title = opts && 'title' in opts ? opts.title : null;
    let image = opts && 'image' in opts ? opts.image : null;
    this[title$] = title;
    this[image$] = image;
    ;
  }).prototype = products.Item.prototype;
  dart.addTypeTests(products.Item);
  dart.addTypeCaches(products.Item);
  dart.setStaticMethodSignature(products.Item, () => ['getProducts']);
  dart.setLibraryUri(products.Item, I[1]);
  dart.setFieldSignature(products.Item, () => ({
    __proto__: dart.getFields(products.Item.__proto__),
    title: dart.finalFieldType(core.String),
    image: dart.finalFieldType(core.String)
  }));
  dart.trackLibraries("zapp_user_main", {
    "file:///zapp/project/.zapp_entry.dart": $46zapp_entry,
    "file:///zapp/project/lib/main.dart": main,
    "file:///zapp/project/.dart_tool/dartpad/web_plugin_registrant.dart": web_plugin_registrant,
    "package:flutter_app/theme.dart": theme$,
    "package:flutter_app/products.dart": products
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["/zapp/project/.zapp_entry.dart","/zapp/project/lib/main.dart","/zapp/project/.dart_tool/dartpad/web_plugin_registrant.dart","/zapp/project/lib/theme.dart","/zapp/project/lib/products.dart"],"names":[],"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","file":"main.js"}');
  // Exports:
  return {
    zapp__project__$46zapp_entry: $46zapp_entry,
    zapp__project__lib__main: main,
    zapp__project__$46dart_tool__dartpad__web_plugin_registrant: web_plugin_registrant,
    theme: theme$,
    products: products
  };
}));

//# sourceMappingURL=main.js.map
